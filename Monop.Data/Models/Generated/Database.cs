
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ApplicationServices`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=db205.my-hosting-panel.com;Initial Catalog=assinik2_monop;User ID=assinik2_dbman;password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace Monop.Forum
{
	public partial class Repo : Database
	{
		public Repo() 
			: base("ApplicationServices")
		{
			CommonConstruct();
		}

		public Repo(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			Repo GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static Repo GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new Repo();
        }

		[ThreadStatic] static Repo _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static Repo repo { get { return Repo.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("aspnet_WebEvent_Events")]
	[PrimaryKey("EventId", autoIncrement=false)]
	[ExplicitColumns]
    public partial class aspnet_WebEvent_Event : Repo.Record<aspnet_WebEvent_Event>  
    {
        [Column] 
		public string EventId 
		{ 
			get
			{
				return _EventId;
			}
			set
			{
				_EventId = value;
				MarkColumnModified("EventId");
			}
		}
		string _EventId;

        [Column] 
		public DateTime EventTimeUtc 
		{ 
			get
			{
				return _EventTimeUtc;
			}
			set
			{
				_EventTimeUtc = value;
				MarkColumnModified("EventTimeUtc");
			}
		}
		DateTime _EventTimeUtc;

        [Column] 
		public DateTime EventTime 
		{ 
			get
			{
				return _EventTime;
			}
			set
			{
				_EventTime = value;
				MarkColumnModified("EventTime");
			}
		}
		DateTime _EventTime;

        [Column] 
		public string EventType 
		{ 
			get
			{
				return _EventType;
			}
			set
			{
				_EventType = value;
				MarkColumnModified("EventType");
			}
		}
		string _EventType;

        [Column] 
		public decimal EventSequence 
		{ 
			get
			{
				return _EventSequence;
			}
			set
			{
				_EventSequence = value;
				MarkColumnModified("EventSequence");
			}
		}
		decimal _EventSequence;

        [Column] 
		public decimal EventOccurrence 
		{ 
			get
			{
				return _EventOccurrence;
			}
			set
			{
				_EventOccurrence = value;
				MarkColumnModified("EventOccurrence");
			}
		}
		decimal _EventOccurrence;

        [Column] 
		public int EventCode 
		{ 
			get
			{
				return _EventCode;
			}
			set
			{
				_EventCode = value;
				MarkColumnModified("EventCode");
			}
		}
		int _EventCode;

        [Column] 
		public int EventDetailCode 
		{ 
			get
			{
				return _EventDetailCode;
			}
			set
			{
				_EventDetailCode = value;
				MarkColumnModified("EventDetailCode");
			}
		}
		int _EventDetailCode;

        [Column] 
		public string Message 
		{ 
			get
			{
				return _Message;
			}
			set
			{
				_Message = value;
				MarkColumnModified("Message");
			}
		}
		string _Message;

        [Column] 
		public string ApplicationPath 
		{ 
			get
			{
				return _ApplicationPath;
			}
			set
			{
				_ApplicationPath = value;
				MarkColumnModified("ApplicationPath");
			}
		}
		string _ApplicationPath;

        [Column] 
		public string ApplicationVirtualPath 
		{ 
			get
			{
				return _ApplicationVirtualPath;
			}
			set
			{
				_ApplicationVirtualPath = value;
				MarkColumnModified("ApplicationVirtualPath");
			}
		}
		string _ApplicationVirtualPath;

        [Column] 
		public string MachineName 
		{ 
			get
			{
				return _MachineName;
			}
			set
			{
				_MachineName = value;
				MarkColumnModified("MachineName");
			}
		}
		string _MachineName;

        [Column] 
		public string RequestUrl 
		{ 
			get
			{
				return _RequestUrl;
			}
			set
			{
				_RequestUrl = value;
				MarkColumnModified("RequestUrl");
			}
		}
		string _RequestUrl;

        [Column] 
		public string ExceptionType 
		{ 
			get
			{
				return _ExceptionType;
			}
			set
			{
				_ExceptionType = value;
				MarkColumnModified("ExceptionType");
			}
		}
		string _ExceptionType;

        [Column] 
		public string Details 
		{ 
			get
			{
				return _Details;
			}
			set
			{
				_Details = value;
				MarkColumnModified("Details");
			}
		}
		string _Details;

	}
    
	[TableName("aspnet_SchemaVersions")]
	[PrimaryKey("Feature", autoIncrement=false)]
	[ExplicitColumns]
    public partial class aspnet_SchemaVersion : Repo.Record<aspnet_SchemaVersion>  
    {
        [Column] 
		public string Feature 
		{ 
			get
			{
				return _Feature;
			}
			set
			{
				_Feature = value;
				MarkColumnModified("Feature");
			}
		}
		string _Feature;

        [Column] 
		public string CompatibleSchemaVersion 
		{ 
			get
			{
				return _CompatibleSchemaVersion;
			}
			set
			{
				_CompatibleSchemaVersion = value;
				MarkColumnModified("CompatibleSchemaVersion");
			}
		}
		string _CompatibleSchemaVersion;

        [Column] 
		public bool IsCurrentVersion 
		{ 
			get
			{
				return _IsCurrentVersion;
			}
			set
			{
				_IsCurrentVersion = value;
				MarkColumnModified("IsCurrentVersion");
			}
		}
		bool _IsCurrentVersion;

	}
    
	[TableName("SiteConfig")]
	[PrimaryKey("Id", autoIncrement=false)]
	[ExplicitColumns]
    public partial class SiteConfig : Repo.Record<SiteConfig>  
    {
        [Column] 
		public Guid Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		Guid _Id;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Value 
		{ 
			get
			{
				return _Value;
			}
			set
			{
				_Value = value;
				MarkColumnModified("Value");
			}
		}
		string _Value;

	}
    
	[TableName("cnfSiteLanguages")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class cnfSiteLanguage : Repo.Record<cnfSiteLanguage>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("Languages")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class Language : Repo.Record<Language>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Code 
		{ 
			get
			{
				return _Code;
			}
			set
			{
				_Code = value;
				MarkColumnModified("Code");
			}
		}
		string _Code;

	}
    
	[TableName("GameProfiles")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class GameProfile : Repo.Record<GameProfile>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public int? CountOfWin 
		{ 
			get
			{
				return _CountOfWin;
			}
			set
			{
				_CountOfWin = value;
				MarkColumnModified("CountOfWin");
			}
		}
		int? _CountOfWin;

        [Column] 
		public int? CountOfLost 
		{ 
			get
			{
				return _CountOfLost;
			}
			set
			{
				_CountOfLost = value;
				MarkColumnModified("CountOfLost");
			}
		}
		int? _CountOfLost;

        [Column] 
		public int? Score 
		{ 
			get
			{
				return _Score;
			}
			set
			{
				_Score = value;
				MarkColumnModified("Score");
			}
		}
		int? _Score;

	}
    
	[TableName("cnfSiteTexts")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class cnfSiteText : Repo.Record<cnfSiteText>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string TextId 
		{ 
			get
			{
				return _TextId;
			}
			set
			{
				_TextId = value;
				MarkColumnModified("TextId");
			}
		}
		string _TextId;

        [Column] 
		public string Text 
		{ 
			get
			{
				return _Text;
			}
			set
			{
				_Text = value;
				MarkColumnModified("Text");
			}
		}
		string _Text;

        [Column] 
		public int? SiteLangId 
		{ 
			get
			{
				return _SiteLangId;
			}
			set
			{
				_SiteLangId = value;
				MarkColumnModified("SiteLangId");
			}
		}
		int? _SiteLangId;

	}
    
	[TableName("aspnet_Users")]
	[ExplicitColumns]
    public partial class aspnet_User : Repo.Record<aspnet_User>  
    {
        [Column] 
		public Guid ApplicationId 
		{ 
			get
			{
				return _ApplicationId;
			}
			set
			{
				_ApplicationId = value;
				MarkColumnModified("ApplicationId");
			}
		}
		Guid _ApplicationId;

        [Column] 
		public Guid UserId 
		{ 
			get
			{
				return _UserId;
			}
			set
			{
				_UserId = value;
				MarkColumnModified("UserId");
			}
		}
		Guid _UserId;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public string LoweredUserName 
		{ 
			get
			{
				return _LoweredUserName;
			}
			set
			{
				_LoweredUserName = value;
				MarkColumnModified("LoweredUserName");
			}
		}
		string _LoweredUserName;

        [Column] 
		public string MobileAlias 
		{ 
			get
			{
				return _MobileAlias;
			}
			set
			{
				_MobileAlias = value;
				MarkColumnModified("MobileAlias");
			}
		}
		string _MobileAlias;

        [Column] 
		public bool IsAnonymous 
		{ 
			get
			{
				return _IsAnonymous;
			}
			set
			{
				_IsAnonymous = value;
				MarkColumnModified("IsAnonymous");
			}
		}
		bool _IsAnonymous;

        [Column] 
		public DateTime LastActivityDate 
		{ 
			get
			{
				return _LastActivityDate;
			}
			set
			{
				_LastActivityDate = value;
				MarkColumnModified("LastActivityDate");
			}
		}
		DateTime _LastActivityDate;

        [Column] 
		public string FirstName 
		{ 
			get
			{
				return _FirstName;
			}
			set
			{
				_FirstName = value;
				MarkColumnModified("FirstName");
			}
		}
		string _FirstName;

        [Column] 
		public string LastName 
		{ 
			get
			{
				return _LastName;
			}
			set
			{
				_LastName = value;
				MarkColumnModified("LastName");
			}
		}
		string _LastName;

	}
    
	[TableName("Users")]
	[PrimaryKey("Uid")]
	[ExplicitColumns]
    public partial class User : Repo.Record<User>  
    {
        [Column] 
		public string Username 
		{ 
			get
			{
				return _Username;
			}
			set
			{
				_Username = value;
				MarkColumnModified("Username");
			}
		}
		string _Username;

        [Column] 
		public int Uid 
		{ 
			get
			{
				return _Uid;
			}
			set
			{
				_Uid = value;
				MarkColumnModified("Uid");
			}
		}
		int _Uid;

        [Column] 
		public string UserDescription 
		{ 
			get
			{
				return _UserDescription;
			}
			set
			{
				_UserDescription = value;
				MarkColumnModified("UserDescription");
			}
		}
		string _UserDescription;

	}
    
	[TableName("aspnet_Paths")]
	[ExplicitColumns]
    public partial class aspnet_Path : Repo.Record<aspnet_Path>  
    {
        [Column] 
		public Guid ApplicationId 
		{ 
			get
			{
				return _ApplicationId;
			}
			set
			{
				_ApplicationId = value;
				MarkColumnModified("ApplicationId");
			}
		}
		Guid _ApplicationId;

        [Column] 
		public Guid PathId 
		{ 
			get
			{
				return _PathId;
			}
			set
			{
				_PathId = value;
				MarkColumnModified("PathId");
			}
		}
		Guid _PathId;

        [Column] 
		public string Path 
		{ 
			get
			{
				return _Path;
			}
			set
			{
				_Path = value;
				MarkColumnModified("Path");
			}
		}
		string _Path;

        [Column] 
		public string LoweredPath 
		{ 
			get
			{
				return _LoweredPath;
			}
			set
			{
				_LoweredPath = value;
				MarkColumnModified("LoweredPath");
			}
		}
		string _LoweredPath;

	}
    
	[TableName("Threads")]
	[PrimaryKey("Tid")]
	[ExplicitColumns]
    public partial class Thread : Repo.Record<Thread>  
    {
        [Column] 
		public int Tid 
		{ 
			get
			{
				return _Tid;
			}
			set
			{
				_Tid = value;
				MarkColumnModified("Tid");
			}
		}
		int _Tid;

        [Column] 
		public int Fid 
		{ 
			get
			{
				return _Fid;
			}
			set
			{
				_Fid = value;
				MarkColumnModified("Fid");
			}
		}
		int _Fid;

        [Column] 
		public string Title 
		{ 
			get
			{
				return _Title;
			}
			set
			{
				_Title = value;
				MarkColumnModified("Title");
			}
		}
		string _Title;

        [Column] 
		public string CreatedUid 
		{ 
			get
			{
				return _CreatedUid;
			}
			set
			{
				_CreatedUid = value;
				MarkColumnModified("CreatedUid");
			}
		}
		string _CreatedUid;

        [Column] 
		public DateTime? CreatedDate 
		{ 
			get
			{
				return _CreatedDate;
			}
			set
			{
				_CreatedDate = value;
				MarkColumnModified("CreatedDate");
			}
		}
		DateTime? _CreatedDate;

        [Column] 
		public DateTime? UpdatedDate 
		{ 
			get
			{
				return _UpdatedDate;
			}
			set
			{
				_UpdatedDate = value;
				MarkColumnModified("UpdatedDate");
			}
		}
		DateTime? _UpdatedDate;

	}
    
	[TableName("SiteLog")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class SiteLog : Repo.Record<SiteLog>  
    {
        [Column] 
		public int id 
		{ 
			get
			{
				return _id;
			}
			set
			{
				_id = value;
				MarkColumnModified("id");
			}
		}
		int _id;

        [Column] 
		public string ReqestIp 
		{ 
			get
			{
				return _ReqestIp;
			}
			set
			{
				_ReqestIp = value;
				MarkColumnModified("ReqestIp");
			}
		}
		string _ReqestIp;

        [Column] 
		public string UserAgent 
		{ 
			get
			{
				return _UserAgent;
			}
			set
			{
				_UserAgent = value;
				MarkColumnModified("UserAgent");
			}
		}
		string _UserAgent;

        [Column] 
		public string Referer 
		{ 
			get
			{
				return _Referer;
			}
			set
			{
				_Referer = value;
				MarkColumnModified("Referer");
			}
		}
		string _Referer;

        [Column] 
		public DateTime? Date 
		{ 
			get
			{
				return _Date;
			}
			set
			{
				_Date = value;
				MarkColumnModified("Date");
			}
		}
		DateTime? _Date;

        [Column] 
		public string RequestedUrl 
		{ 
			get
			{
				return _RequestedUrl;
			}
			set
			{
				_RequestedUrl = value;
				MarkColumnModified("RequestedUrl");
			}
		}
		string _RequestedUrl;

	}
    
	[TableName("aspnet_Roles")]
	[ExplicitColumns]
    public partial class aspnet_Role : Repo.Record<aspnet_Role>  
    {
        [Column] 
		public Guid ApplicationId 
		{ 
			get
			{
				return _ApplicationId;
			}
			set
			{
				_ApplicationId = value;
				MarkColumnModified("ApplicationId");
			}
		}
		Guid _ApplicationId;

        [Column] 
		public Guid RoleId 
		{ 
			get
			{
				return _RoleId;
			}
			set
			{
				_RoleId = value;
				MarkColumnModified("RoleId");
			}
		}
		Guid _RoleId;

        [Column] 
		public string RoleName 
		{ 
			get
			{
				return _RoleName;
			}
			set
			{
				_RoleName = value;
				MarkColumnModified("RoleName");
			}
		}
		string _RoleName;

        [Column] 
		public string LoweredRoleName 
		{ 
			get
			{
				return _LoweredRoleName;
			}
			set
			{
				_LoweredRoleName = value;
				MarkColumnModified("LoweredRoleName");
			}
		}
		string _LoweredRoleName;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("Posts")]
	[PrimaryKey("Mid")]
	[ExplicitColumns]
    public partial class Post : Repo.Record<Post>  
    {
        [Column] 
		public int Mid 
		{ 
			get
			{
				return _Mid;
			}
			set
			{
				_Mid = value;
				MarkColumnModified("Mid");
			}
		}
		int _Mid;

        [Column] 
		public string Text 
		{ 
			get
			{
				return _Text;
			}
			set
			{
				_Text = value;
				MarkColumnModified("Text");
			}
		}
		string _Text;

        [Column] 
		public string AddedBy 
		{ 
			get
			{
				return _AddedBy;
			}
			set
			{
				_AddedBy = value;
				MarkColumnModified("AddedBy");
			}
		}
		string _AddedBy;

        [Column] 
		public int? AddedUid 
		{ 
			get
			{
				return _AddedUid;
			}
			set
			{
				_AddedUid = value;
				MarkColumnModified("AddedUid");
			}
		}
		int? _AddedUid;

        [Column] 
		public DateTime? AddedDate 
		{ 
			get
			{
				return _AddedDate;
			}
			set
			{
				_AddedDate = value;
				MarkColumnModified("AddedDate");
			}
		}
		DateTime? _AddedDate;

        [Column] 
		public int Tid 
		{ 
			get
			{
				return _Tid;
			}
			set
			{
				_Tid = value;
				MarkColumnModified("Tid");
			}
		}
		int _Tid;

	}
    
	[TableName("Forums")]
	[PrimaryKey("Fid", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Forum : Repo.Record<Forum>  
    {
        [Column] 
		public int Fid 
		{ 
			get
			{
				return _Fid;
			}
			set
			{
				_Fid = value;
				MarkColumnModified("Fid");
			}
		}
		int _Fid;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

        [Column] 
		public int? Level 
		{ 
			get
			{
				return _Level;
			}
			set
			{
				_Level = value;
				MarkColumnModified("Level");
			}
		}
		int? _Level;

        [Column] 
		public int? ParentFid 
		{ 
			get
			{
				return _ParentFid;
			}
			set
			{
				_ParentFid = value;
				MarkColumnModified("ParentFid");
			}
		}
		int? _ParentFid;

	}
    
	[TableName("aspnet_PersonalizationPerUser")]
	[ExplicitColumns]
    public partial class aspnet_PersonalizationPerUser : Repo.Record<aspnet_PersonalizationPerUser>  
    {
        [Column] 
		public Guid Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		Guid _Id;

        [Column] 
		public Guid? PathId 
		{ 
			get
			{
				return _PathId;
			}
			set
			{
				_PathId = value;
				MarkColumnModified("PathId");
			}
		}
		Guid? _PathId;

        [Column] 
		public Guid? UserId 
		{ 
			get
			{
				return _UserId;
			}
			set
			{
				_UserId = value;
				MarkColumnModified("UserId");
			}
		}
		Guid? _UserId;

        [Column] 
		public byte[] PageSettings 
		{ 
			get
			{
				return _PageSettings;
			}
			set
			{
				_PageSettings = value;
				MarkColumnModified("PageSettings");
			}
		}
		byte[] _PageSettings;

        [Column] 
		public DateTime LastUpdatedDate 
		{ 
			get
			{
				return _LastUpdatedDate;
			}
			set
			{
				_LastUpdatedDate = value;
				MarkColumnModified("LastUpdatedDate");
			}
		}
		DateTime _LastUpdatedDate;

	}
    
	[TableName("aspnet_Profile")]
	[PrimaryKey("UserId", autoIncrement=false)]
	[ExplicitColumns]
    public partial class aspnet_Profile : Repo.Record<aspnet_Profile>  
    {
        [Column] 
		public Guid UserId 
		{ 
			get
			{
				return _UserId;
			}
			set
			{
				_UserId = value;
				MarkColumnModified("UserId");
			}
		}
		Guid _UserId;

        [Column] 
		public string PropertyNames 
		{ 
			get
			{
				return _PropertyNames;
			}
			set
			{
				_PropertyNames = value;
				MarkColumnModified("PropertyNames");
			}
		}
		string _PropertyNames;

        [Column] 
		public string PropertyValuesString 
		{ 
			get
			{
				return _PropertyValuesString;
			}
			set
			{
				_PropertyValuesString = value;
				MarkColumnModified("PropertyValuesString");
			}
		}
		string _PropertyValuesString;

        [Column] 
		public byte[] PropertyValuesBinary 
		{ 
			get
			{
				return _PropertyValuesBinary;
			}
			set
			{
				_PropertyValuesBinary = value;
				MarkColumnModified("PropertyValuesBinary");
			}
		}
		byte[] _PropertyValuesBinary;

        [Column] 
		public DateTime LastUpdatedDate 
		{ 
			get
			{
				return _LastUpdatedDate;
			}
			set
			{
				_LastUpdatedDate = value;
				MarkColumnModified("LastUpdatedDate");
			}
		}
		DateTime _LastUpdatedDate;

	}
    
	[TableName("aspnet_Membership")]
	[ExplicitColumns]
    public partial class aspnet_Membership : Repo.Record<aspnet_Membership>  
    {
        [Column] 
		public Guid ApplicationId 
		{ 
			get
			{
				return _ApplicationId;
			}
			set
			{
				_ApplicationId = value;
				MarkColumnModified("ApplicationId");
			}
		}
		Guid _ApplicationId;

        [Column] 
		public Guid UserId 
		{ 
			get
			{
				return _UserId;
			}
			set
			{
				_UserId = value;
				MarkColumnModified("UserId");
			}
		}
		Guid _UserId;

        [Column] 
		public string Password 
		{ 
			get
			{
				return _Password;
			}
			set
			{
				_Password = value;
				MarkColumnModified("Password");
			}
		}
		string _Password;

        [Column] 
		public int PasswordFormat 
		{ 
			get
			{
				return _PasswordFormat;
			}
			set
			{
				_PasswordFormat = value;
				MarkColumnModified("PasswordFormat");
			}
		}
		int _PasswordFormat;

        [Column] 
		public string PasswordSalt 
		{ 
			get
			{
				return _PasswordSalt;
			}
			set
			{
				_PasswordSalt = value;
				MarkColumnModified("PasswordSalt");
			}
		}
		string _PasswordSalt;

        [Column] 
		public string MobilePIN 
		{ 
			get
			{
				return _MobilePIN;
			}
			set
			{
				_MobilePIN = value;
				MarkColumnModified("MobilePIN");
			}
		}
		string _MobilePIN;

        [Column] 
		public string Email 
		{ 
			get
			{
				return _Email;
			}
			set
			{
				_Email = value;
				MarkColumnModified("Email");
			}
		}
		string _Email;

        [Column] 
		public string LoweredEmail 
		{ 
			get
			{
				return _LoweredEmail;
			}
			set
			{
				_LoweredEmail = value;
				MarkColumnModified("LoweredEmail");
			}
		}
		string _LoweredEmail;

        [Column] 
		public string PasswordQuestion 
		{ 
			get
			{
				return _PasswordQuestion;
			}
			set
			{
				_PasswordQuestion = value;
				MarkColumnModified("PasswordQuestion");
			}
		}
		string _PasswordQuestion;

        [Column] 
		public string PasswordAnswer 
		{ 
			get
			{
				return _PasswordAnswer;
			}
			set
			{
				_PasswordAnswer = value;
				MarkColumnModified("PasswordAnswer");
			}
		}
		string _PasswordAnswer;

        [Column] 
		public bool IsApproved 
		{ 
			get
			{
				return _IsApproved;
			}
			set
			{
				_IsApproved = value;
				MarkColumnModified("IsApproved");
			}
		}
		bool _IsApproved;

        [Column] 
		public bool IsLockedOut 
		{ 
			get
			{
				return _IsLockedOut;
			}
			set
			{
				_IsLockedOut = value;
				MarkColumnModified("IsLockedOut");
			}
		}
		bool _IsLockedOut;

        [Column] 
		public DateTime CreateDate 
		{ 
			get
			{
				return _CreateDate;
			}
			set
			{
				_CreateDate = value;
				MarkColumnModified("CreateDate");
			}
		}
		DateTime _CreateDate;

        [Column] 
		public DateTime LastLoginDate 
		{ 
			get
			{
				return _LastLoginDate;
			}
			set
			{
				_LastLoginDate = value;
				MarkColumnModified("LastLoginDate");
			}
		}
		DateTime _LastLoginDate;

        [Column] 
		public DateTime LastPasswordChangedDate 
		{ 
			get
			{
				return _LastPasswordChangedDate;
			}
			set
			{
				_LastPasswordChangedDate = value;
				MarkColumnModified("LastPasswordChangedDate");
			}
		}
		DateTime _LastPasswordChangedDate;

        [Column] 
		public DateTime LastLockoutDate 
		{ 
			get
			{
				return _LastLockoutDate;
			}
			set
			{
				_LastLockoutDate = value;
				MarkColumnModified("LastLockoutDate");
			}
		}
		DateTime _LastLockoutDate;

        [Column] 
		public int FailedPasswordAttemptCount 
		{ 
			get
			{
				return _FailedPasswordAttemptCount;
			}
			set
			{
				_FailedPasswordAttemptCount = value;
				MarkColumnModified("FailedPasswordAttemptCount");
			}
		}
		int _FailedPasswordAttemptCount;

        [Column] 
		public DateTime FailedPasswordAttemptWindowStart 
		{ 
			get
			{
				return _FailedPasswordAttemptWindowStart;
			}
			set
			{
				_FailedPasswordAttemptWindowStart = value;
				MarkColumnModified("FailedPasswordAttemptWindowStart");
			}
		}
		DateTime _FailedPasswordAttemptWindowStart;

        [Column] 
		public int FailedPasswordAnswerAttemptCount 
		{ 
			get
			{
				return _FailedPasswordAnswerAttemptCount;
			}
			set
			{
				_FailedPasswordAnswerAttemptCount = value;
				MarkColumnModified("FailedPasswordAnswerAttemptCount");
			}
		}
		int _FailedPasswordAnswerAttemptCount;

        [Column] 
		public DateTime FailedPasswordAnswerAttemptWindowStart 
		{ 
			get
			{
				return _FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				_FailedPasswordAnswerAttemptWindowStart = value;
				MarkColumnModified("FailedPasswordAnswerAttemptWindowStart");
			}
		}
		DateTime _FailedPasswordAnswerAttemptWindowStart;

        [Column] 
		public string Comment 
		{ 
			get
			{
				return _Comment;
			}
			set
			{
				_Comment = value;
				MarkColumnModified("Comment");
			}
		}
		string _Comment;

	}
    
	[TableName("aspnet_PersonalizationAllUsers")]
	[PrimaryKey("PathId", autoIncrement=false)]
	[ExplicitColumns]
    public partial class aspnet_PersonalizationAllUser : Repo.Record<aspnet_PersonalizationAllUser>  
    {
        [Column] 
		public Guid PathId 
		{ 
			get
			{
				return _PathId;
			}
			set
			{
				_PathId = value;
				MarkColumnModified("PathId");
			}
		}
		Guid _PathId;

        [Column] 
		public byte[] PageSettings 
		{ 
			get
			{
				return _PageSettings;
			}
			set
			{
				_PageSettings = value;
				MarkColumnModified("PageSettings");
			}
		}
		byte[] _PageSettings;

        [Column] 
		public DateTime LastUpdatedDate 
		{ 
			get
			{
				return _LastUpdatedDate;
			}
			set
			{
				_LastUpdatedDate = value;
				MarkColumnModified("LastUpdatedDate");
			}
		}
		DateTime _LastUpdatedDate;

	}
    
	[TableName("aspnet_UsersInRoles")]
	[PrimaryKey("UserId", autoIncrement=false)]
	[ExplicitColumns]
    public partial class aspnet_UsersInRole : Repo.Record<aspnet_UsersInRole>  
    {
        [Column] 
		public Guid UserId 
		{ 
			get
			{
				return _UserId;
			}
			set
			{
				_UserId = value;
				MarkColumnModified("UserId");
			}
		}
		Guid _UserId;

        [Column] 
		public Guid RoleId 
		{ 
			get
			{
				return _RoleId;
			}
			set
			{
				_RoleId = value;
				MarkColumnModified("RoleId");
			}
		}
		Guid _RoleId;

	}
    
	[TableName("aspnet_Applications")]
	[ExplicitColumns]
    public partial class aspnet_Application : Repo.Record<aspnet_Application>  
    {
        [Column] 
		public string ApplicationName 
		{ 
			get
			{
				return _ApplicationName;
			}
			set
			{
				_ApplicationName = value;
				MarkColumnModified("ApplicationName");
			}
		}
		string _ApplicationName;

        [Column] 
		public string LoweredApplicationName 
		{ 
			get
			{
				return _LoweredApplicationName;
			}
			set
			{
				_LoweredApplicationName = value;
				MarkColumnModified("LoweredApplicationName");
			}
		}
		string _LoweredApplicationName;

        [Column] 
		public Guid ApplicationId 
		{ 
			get
			{
				return _ApplicationId;
			}
			set
			{
				_ApplicationId = value;
				MarkColumnModified("ApplicationId");
			}
		}
		Guid _ApplicationId;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
}


